"""Initial migration

Revision ID: 69ede00f27ea
Revises: 
Create Date: 2025-09-10 17:56:17.130554

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '69ede00f27ea'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('sensor_readings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sensor_id', sa.String(length=50), nullable=False),
    sa.Column('sensor_type', sa.String(length=50), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('temperature', sa.Float(), nullable=True),
    sa.Column('humidity', sa.Float(), nullable=True),
    sa.Column('pressure', sa.Float(), nullable=True),
    sa.Column('light_level', sa.Float(), nullable=True),
    sa.Column('proximity', sa.Integer(), nullable=True),
    sa.Column('data', sa.JSON(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('sensor_readings', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_sensor_readings_sensor_id'), ['sensor_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_sensor_readings_timestamp'), ['timestamp'], unique=False)

    op.create_table('sensors',
    sa.Column('id', sa.String(length=50), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('sensor_type', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('i2c_address', sa.Integer(), nullable=True),
    sa.Column('gpio_pin', sa.Integer(), nullable=True),
    sa.Column('bus_number', sa.Integer(), nullable=True),
    sa.Column('poll_interval', sa.Integer(), nullable=True),
    sa.Column('enabled', sa.Boolean(), nullable=True),
    sa.Column('calibration_data', sa.JSON(), nullable=True),
    sa.Column('location', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('last_reading_at', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('error_count', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('system_status',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('cpu_usage', sa.Float(), nullable=True),
    sa.Column('memory_usage', sa.Float(), nullable=True),
    sa.Column('disk_usage', sa.Float(), nullable=True),
    sa.Column('temperature', sa.Float(), nullable=True),
    sa.Column('network_status', sa.String(length=20), nullable=True),
    sa.Column('active_sensors', sa.Integer(), nullable=True),
    sa.Column('failed_sensors', sa.Integer(), nullable=True),
    sa.Column('total_readings', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('system_status')
    op.drop_table('sensors')
    with op.batch_alter_table('sensor_readings', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_sensor_readings_timestamp'))
        batch_op.drop_index(batch_op.f('ix_sensor_readings_sensor_id'))

    op.drop_table('sensor_readings')
    # ### end Alembic commands ###
